{"version":3,"sources":["./src/app/models/users.ts","./src/app/services/peritos.service.ts","./src/app/services/user.service.ts","./src/app/services/users.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["export class Users{\r\n    constructor(\r\n        public id: string,\r\n        public nombre: string,\r\n        public usuario: string,\r\n        public password: string,\r\n        public islogged: string,\r\n        public image: string,\r\n        public institucion: string,\r\n        public cargo: string,\r\n        public token: string,\r\n        public status: string,\r\n        public createAt: string,\r\n    ){}\r\n} ","import { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment'\r\nimport { Carpeta } from '../models/carpeta';\r\nimport { Indicio } from '../models/indicio';\r\n\r\nmoment.locale('en');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class peritosService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    getFolderXPerito(nuc: string): Observable<Carpeta[]> {\r\n        return this.http.get<any>(`${environment.url_api}getFolderXPerito/${nuc}`).pipe(map(result => {\r\n            return JSON.parse(JSON.stringify(result.Resultado)).map(item => {                \r\n                return new Carpeta(\r\n                    item.nuc,\r\n                    item.isOpen,\r\n                    item.horaIntervencion,\r\n                    item.horaCreacion,\r\n                    item.fechaIntervencion,\r\n                    item.lugar,\r\n                    item.institucion,\r\n                    item.inicio,\r\n                    item.folio,\r\n                    item.entregado\r\n                ); \r\n            });\r\n        }));\r\n    }\r\n\r\n    getIndiciosXPeritoAndFolder(usuario: String): Observable<Indicio[]> {\r\n        return this.http.get<any>(`${environment.url_api}getIndiciosXPeritoAndFolder/${usuario}`).pipe(map(result => {\r\n            return JSON.parse(JSON.stringify(result.IndiciosPF)).map(item => {                \r\n              return new Indicio(\r\n                item.id_indicio,\r\n                item.identificacion,\r\n                item.descripcion,\r\n                item.fecha,\r\n                item.hora,\r\n                item.documentacion,\r\n                item.recoleccion,\r\n                item.embalaje,\r\n                item.latitud,\r\n                item.longitud,\r\n                item.lugar,\r\n                item.foto1,\r\n                item.naturaleza,\r\n                item.nombreUsuario,\r\n                item.usuario,\r\n                item.smart_tag,\r\n                item.foto2,\r\n                item.nuc,\r\n                item.escrito,\r\n                item.fotografico,\r\n                item.croquis,\r\n                item.otro,\r\n                item.especifique,\r\n                item.entregado,\r\n                item.estado\r\n            ); \r\n        });\r\n    }));\r\n    }\r\n\r\n\r\n    getTotalFolderxPerito(user: string) {\r\n\r\n        let data = {\r\n          usuario: user\r\n        }\r\n    \r\n        return this.http.post<any>(`${environment.url_api}getTotalFolderxPerito`, data).pipe(map(result => {\r\n          return result.IndiciosPF;\r\n        }));\r\n      }\r\n\r\n\r\n\r\n//   updateFolder(folder: Carpeta) {\r\n//     let data = {\r\n//       horaIntervencion: folder.horaIntervencion,\r\n//       fechaIntervencion: folder.fechaIntervencion,\r\n//       lugar: folder.lugar,\r\n//       institucion: folder.institucion,\r\n//       inicio: folder.inicio,\r\n//       folio: folder.folio,\r\n//     }\r\n\r\n//     console.log(data);\r\n    \r\n//     return this.http.put<any>(`${environment.url_api}updateFolder/${folder.nuc}`, data).pipe(map (result=> {                                              \r\n//       if(result.OK){\r\n//         return result;\r\n//       } \r\n//     }));\r\n//   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AuthentificationService } from '../services/authentification.service';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user';\r\n\r\nimport { reject } from 'q';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n    observable:Observable<User[]>;  \r\n    public currentUser;\r\n    public urlAPI;\r\n\r\n    constructor(private http: HttpClient, private authenticationService: AuthentificationService) {\r\n        this.currentUser = this.authenticationService.currentUserValue;\r\n    }\r\n\r\n    getCountUsers() {\r\n        return this.http.get<any>(`${environment.url_api}getCountUsers`).pipe(map(result => {\r\n          return result.Total;\r\n        }));\r\n    }\r\n  \r\n\r\n    getUsers(): Observable<User[]> {\r\n        return this.http.get<any>(`${environment.url_api}usuario`)\r\n        .pipe(\r\n            map(result => {\r\n                console.log(result);\r\n                \r\n                return JSON.parse(JSON.stringify(result.Usuarios)).map(item => {                \r\n                    return new User(\r\n                        item.id_usuario,\r\n                        item.nombre_empleado,\r\n                        item.nombre_usuario,\r\n                        item.contrasena,\r\n                        item.id_role,\r\n                        item.status,\r\n                        item.cargo,\r\n                        item.fecha_creacion,\r\n                        item.fecha_ultima_modificacion,\r\n                        item.fecha_modificacion_por,\r\n                        item.Role.nombre_role,\r\n                        item.creado_por,\r\n                        item.token,\r\n                    );\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    addUser(user: User){\r\n        let data = {\r\n            nombre_empleado: user.nombre_empleado,\r\n            nombre_usuario: user.nombre_usuario,\r\n            contrasena: user.contrasena,\r\n            id_role: user.id_role,\r\n            cargo: user.cargo\r\n        }\r\n\r\n        console.log(data);\r\n        \r\n        return this.http.post<any>(`${environment.url_api}usuario`, data).pipe(\r\n            map(result => {                           \r\n                if(result.OK) {\r\n                    return result.Usuario;\r\n                } else {\r\n                    return reject;\r\n                }\r\n            })\r\n        );  \r\n    }\r\n\r\n    updateUser(nombre_empleado: string, nombre_usuario: string, contrasena: string, cargo: string) {\r\n\r\n        let data = {\r\n            nombre_empleado: nombre_empleado,\r\n            nombre_usuario: nombre_usuario,\r\n            contrasena: contrasena,\r\n            cargo: cargo\r\n        }\r\n        \r\n        return this.http.put<any>(`${environment.url_api}usuarioperfil/${this.currentUser.id_usuario}`, data)\r\n        .pipe(map (result=> {                        \r\n            if(result.OK){\r\n                \r\n            }\r\n            return result;\r\n        }));\r\n    }\r\n    \r\n    updateUsers(user: User) {\r\n\r\n        let data = {\r\n            nombre_empleado: user.nombre_empleado,\r\n            nombre_usuario: user.nombre_usuario,\r\n            contrasena: user.contrasena,\r\n            id_role: user.id_role,\r\n            cargo: user.cargo\r\n        }\r\n        \r\n        return this.http.put<any>(`${environment.url_api}usuario/${user.id_usuario}`, data)\r\n        .pipe(map (result=> {                                              \r\n            if(result.OK){\r\n                return result;\r\n            } else {\r\n                return reject();\r\n            }\r\n        }));\r\n    }\r\n\r\n    deleteUser(id_usuario: string){\r\n        return this.http.delete<any>(`${environment.url_api}usuario/${id_usuario}`)\r\n        .pipe(\r\n            map(result => {                \r\n                return result;\r\n            })\r\n        );\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { Users } from '../models/users';\r\nimport { reject } from 'q';\r\n\r\nmoment.locale('en');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UsersService {\r\n\r\n    constructor(private http: HttpClient) {\r\n        \r\n    }\r\n\r\n    getCountUserApp() {\r\n        return this.http.get<any>(`${environment.url_api}getCountUserApp`).pipe(map(result => {\r\n          return result.Total;\r\n        }));\r\n    }\r\n  \r\n    getUsersApp(): Observable<Users[]> {\r\n        return this.http.get<any>(`${environment.url_api}getUsuariosApp`).pipe(map(result => {\r\n            return JSON.parse(JSON.stringify(result.UsuariosAPP)).map(item => {                \r\n                return new Users(\r\n                    item.id_usuario_app,\r\n                    item.nombre,\r\n                    item.usuario,\r\n                    item.password,\r\n                    item.isLogged,\r\n                    item.image,\r\n                    item.institucion,\r\n                    item.cargo,\r\n                    item.token,\r\n                    item.status,\r\n                    item.createAt\r\n                );\r\n            });\r\n        }));\r\n    }\r\n\r\n    addUserApp(user: Users){\r\n        let data = {\r\n            nombre: user.nombre,\r\n            usuario: user.usuario,\r\n            password: user.password,\r\n            image: user.image,\r\n            institucion: user.institucion,\r\n            cargo: user.cargo,\r\n            createAt: user.createAt\r\n        }\r\n    \r\n        return this.http.post<any>(`${environment.url_api}AddUsuarioApp`, data).pipe(\r\n            map(result => {                           \r\n                if(result.OK) {\r\n                    return result.addUsuarioAPP;\r\n                } else {\r\n                    return reject;\r\n                }\r\n            })\r\n        );  \r\n    }\r\n\r\n    updateUserApp(user: Users) {\r\n        let data = {\r\n            nombre: user.nombre,\r\n            usuario: user.usuario,\r\n            password: user.password,\r\n            institucion: user.institucion,\r\n            cargo: user.cargo,\r\n        }\r\n\r\n        console.log(data);\r\n        \r\n        return this.http.put<any>(`${environment.url_api}updateUsuarioApp/${user.id}`, data).pipe(map (result=> {                                              \r\n            if(result.OK){\r\n                return result;\r\n            } else {\r\n                return reject();\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    deleteUserApp(id_usuario_app: string){\r\n        return this.http.delete<any>(`${environment.url_api}deleteUsuarioApp/${id_usuario_app}`).pipe(\r\n            map(result => {                \r\n                return result;\r\n            })\r\n        );\r\n    }\r\n\r\n}"],"sourceRoot":"webpack:///"}